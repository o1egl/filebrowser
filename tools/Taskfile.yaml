version: 3

env:
  TOOLS_BIN:
    sh: echo "$(pwd)/bin"

tasks:
  all:
    desc: Install build dependencies
    cmds:
      - task: go-enum
      - task: goimports
      - task: golangci-lint
      - task: mockgen
      - task: buf
      - task: protoc-gen-go
      - task: protoc-gen-connect-go
      - task: standard-version
      - task: commitlint


  go-enum:
    cmds:
      - task: install-go-dep
        vars: { PACKAGE: github.com/abice/go-enum }
  goimports:
    cmds:
      - task: install-go-dep
        vars: { PACKAGE: golang.org/x/tools/cmd/goimports }
  golangci-lint:
    cmds:
      - task: install-go-dep
        vars: { PACKAGE: github.com/golangci/golangci-lint/cmd/golangci-lint }
  mockgen:
    cmds:
      - task: install-go-dep
        vars: { PACKAGE: go.uber.org/mock/mockgen }
  buf:
    cmds:
      - task: install-go-dep
        vars: { PACKAGE: github.com/bufbuild/buf/cmd/buf  }
  protoc-gen-go:
    cmds:
      - task: install-go-dep
        vars: { PACKAGE: google.golang.org/protobuf/cmd/protoc-gen-go }
  protoc-gen-connect-go:
    cmds:
      - task: install-go-dep
        vars: { PACKAGE: connectrpc.com/connect/cmd/protoc-gen-connect-go }
  standard-version:
    deps: [install-js-deps]
  commitlint:
    deps: [install-js-deps]


  install-go-dep:
    vars:
      BIN:
        sh: basename "{{ .PACKAGE }}"
    label: "install-{{.BIN}}"
    cmds:
      - go build -o bin/{{ .BIN }}  "{{ .PACKAGE }}"
    sources:
      - go.mod
    generates:
      - bin/{{ .BIN }}


  install-js-deps:
    vars:
      PWD:
        sh: pwd
    cmds:
      - yarn install --frozen-lockfile
      - ln -sf {{.PWD}}/node_modules/.bin/standard-version {{.PWD}}/bin/standard-version
      - ln -sf {{.PWD}}/node_modules/.bin/commitlint {{.PWD}}/bin/commitlint
    sources:
      - package.json
      - yarn.lock
    generates:
      - bin/standard-version
      - bin/commitlint
