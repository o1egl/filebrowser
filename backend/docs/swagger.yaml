definitions:
  model.Capabilities:
    properties:
      delete:
        type: boolean
      read:
        type: boolean
      rename:
        type: boolean
      share:
        type: boolean
      write:
        type: boolean
    type: object
  model.File:
    properties:
      capabilities:
        $ref: '#/definitions/model.Capabilities'
      name:
        type: string
      size:
        type: integer
    type: object
  model.FileLocation:
    properties:
      path:
        type: string
      volume:
        type: integer
    type: object
  model.Group:
    properties:
      files:
        items:
          $ref: '#/definitions/model.File'
        type: array
      name:
        type: string
    type: object
  model.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  model.OnConflict:
    enum:
    - skip
    - override
    - rename
    type: string
    x-enum-varnames:
    - OnConflictSkip
    - OnConflictOverride
    - OnConflictRename
  model.OperationStatus:
    properties:
      error:
        $ref: '#/definitions/model.HTTPError'
      progress:
        type: integer
      state:
        $ref: '#/definitions/model.OperationStatusState'
    type: object
  model.OperationStatusState:
    enum:
    - scheduled
    - in_progress
    - done
    - error
    type: string
    x-enum-varnames:
    - OperationStatusStateScheduled
    - OperationStatusStateInProgress
    - OperationStatusStateDone
    - OperationStatusStateError
  model.RenameRequest:
    properties:
      dst:
        $ref: '#/definitions/model.FileLocation'
      on_conflict:
        $ref: '#/definitions/model.OnConflict'
      src:
        $ref: '#/definitions/model.FileLocation'
    type: object
info:
  contact: {}
paths:
  /v1/files/copy:
    post:
      consumes:
      - application/json
      description: copy a file
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RenameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: operation id
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: copy a file
      tags:
      - files
  /v1/files/delete:
    delete:
      consumes:
      - application/json
      description: delete a file
      parameters:
      - description: volume id
        in: query
        name: volume
        type: integer
      - description: path to file
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: delete a file
      tags:
      - files
  /v1/files/list:
    get:
      consumes:
      - application/json
      description: get files list
      parameters:
      - description: volume id
        in: query
        name: volume
        type: integer
      - description: path to file
        in: query
        name: path
        required: true
        type: string
      - default: none
        description: group by
        enum:
        - none
        - kind
        - modified
        - size
        in: query
        name: group_by
        type: string
      - description: sort by
        enum:
        - name
        - size
        - modified
        in: query
        name: sort_by
        type: string
      - description: sort order
        enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Group'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Returns list of files
      tags:
      - files
  /v1/files/move:
    post:
      consumes:
      - application/json
      description: copy a file
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RenameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: operation id
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: copy a file
      tags:
      - files
  /v1/files/rename:
    put:
      consumes:
      - application/json
      description: renames a file
      parameters:
      - description: volume id
        in: query
        name: volume
        type: integer
      - description: path to file
        in: query
        name: path
        required: true
        type: string
      - description: new name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: renames a file
      tags:
      - files
  /v1/operations/{id}:
    get:
      consumes:
      - application/json
      description: returns status of an operation
      parameters:
      - description: operation id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OperationStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: returns status of an operation
      tags:
      - operations
swagger: "2.0"
